
digraph G {
  rankdir=TB; // Change layout to Top-to-Bottom
  nodesep=0.5; // Adjust horizontal spacing
  ranksep=1;   // Adjust vertical spacing
  node [fontname="Arial"];
  "app-test.ts" [shape=box];
  "app.ts" [shape=box];
  "controllers" [shape=folder];
  "assistant.controller.ts" [shape=box];
  "data" [shape=folder];
  "database" [shape=folder];
  "database.ts" [shape=box];
  "init.ts" [shape=box];
  "index.ts" [shape=box];
  "models" [shape=folder];
  "assistant.model.ts" [shape=box];
  "feedback.model.ts" [shape=box];
  "focused-memory.model.ts" [shape=box];
  "memory.model.ts" [shape=box];
  "promotion-criteria.model.ts" [shape=box];
  "relationship.model.ts" [shape=box];
  "service-models" [shape=folder];
  "connector.service.model.ts" [shape=box];
  "tag.model.ts" [shape=box];
  "task.model.ts" [shape=box];
  "queries" [shape=folder];
  "assistant.queries.ts" [shape=box];
  "routes" [shape=folder];
  "assistant.routes.ts" [shape=box];
  "services" [shape=folder];
  "gpt-api" [shape=folder];
  "gpt-api-assistant.ts" [shape=box];
  "gpt-api-chat-completion.ts" [shape=box];
  "gpt-api-connector.ts" [shape=box];
  "gpt-api-model-helper.ts" [shape=box];
  "gpt-api-models.model.ts" [shape=box];
  "gpt-api-thread.ts" [shape=box];
  "gpt-api.config.ts" [shape=box];
  "sqlite-services" [shape=folder];
  "assistant-full.service.ts" [shape=box];
  "assistant.service.ts" [shape=box];
  "feedback.service.ts" [shape=box];
  "focused-memory.service.ts" [shape=box];
  "memory-extra.service.ts" [shape=box];
  "memory-focus-rule.service.ts" [shape=box];
  "memory.service.ts" [shape=box];
  "owned-memory.service.ts" [shape=box];
  "relationship-graph.service.ts" [shape=box];
  "tag-extra.service.ts" [shape=box];
  "tag.service.ts" [shape=box];
  "task.service.ts" [shape=box];
  "unique-id.service.ts" [shape=box];
  "tests" [shape=folder];
  "integration" [shape=folder];
  "gpt-api-chat-completion.integration.test.ts" [shape=box];
  "gpt-assistant.integration.test.ts" [shape=box];
  "gpt-threads.integration.test.ts" [shape=box];
  "unit" [shape=folder];
  "gpt-tests" [shape=folder];
  "gpt-api-thread.example.ts" [shape=box];
  "gpt-assistant-with-functions.example.ts" [shape=box];
  "gpt-assistant.test.ts" [shape=box];
  "gpt-crud.example.ts" [shape=box];
  "other-tests" [shape=folder];
  "assistant.queries.test.ts" [shape=box];
  "gpt-api-model.helper.test.ts" [shape=box];
  "service-tests" [shape=folder];
  "assistant-full.service.test.ts" [shape=box];
  "assistant.service.test.ts" [shape=box];
  "database.test.ts" [shape=box];
  "feedback.service.test.ts" [shape=box];
  "focused-memory.service.test.ts" [shape=box];
  "memory-extra.service.test.ts" [shape=box];
  "memory-focus-rule.service.test.ts" [shape=box];
  "memory.service.test.ts" [shape=box];
  "owned-memory.service.test.ts" [shape=box];
  "relationship-graph.service.test.ts" [shape=box];
  "tag-extra.service.test.ts" [shape=box];
  "tag.service.test.ts" [shape=box];
  "task.service.test.ts" [shape=box];
  "test-db-insert.helper.ts" [shape=box];
  "test-db-return.helper.ts" [shape=box];
  "test-db.helper.ts" [shape=box];
  "test-object.helper.ts" [shape=box];
  "transformer-tests" [shape=folder];
  "assistant-full.transformer.test.ts" [shape=box];
  "assistant.transformer.test.ts" [shape=box];
  "memory-focus-rule.transformer.test.ts" [shape=box];
  "memory.transformer.test.ts" [shape=box];
  "transformers" [shape=folder];
  "assistant-full.transformer.ts" [shape=box];
  "assistant.transformer.ts" [shape=box];
  "memory-focus-rule.transformer.ts" [shape=box];
  "memory.transformer.ts" [shape=box];
  "tag.transformer.ts" [shape=box];
  "controllers" -> "assistant.controller.ts";
  "database" -> "database.ts";
  "database" -> "init.ts";
  "models" -> "assistant.model.ts";
  "models" -> "feedback.model.ts";
  "models" -> "focused-memory.model.ts";
  "models" -> "memory.model.ts";
  "models" -> "promotion-criteria.model.ts";
  "models" -> "relationship.model.ts";
  "models" -> "service-models";
  "service-models" -> "connector.service.model.ts";
  "models" -> "tag.model.ts";
  "models" -> "task.model.ts";
  "queries" -> "assistant.queries.ts";
  "routes" -> "assistant.routes.ts";
  "services" -> "gpt-api";
  "gpt-api" -> "gpt-api-assistant.ts";
  "gpt-api" -> "gpt-api-chat-completion.ts";
  "gpt-api" -> "gpt-api-connector.ts";
  "gpt-api" -> "gpt-api-model-helper.ts";
  "gpt-api" -> "gpt-api-models.model.ts";
  "gpt-api" -> "gpt-api-thread.ts";
  "gpt-api" -> "gpt-api.config.ts";
  "services" -> "sqlite-services";
  "sqlite-services" -> "assistant-full.service.ts";
  "sqlite-services" -> "assistant.service.ts";
  "sqlite-services" -> "feedback.service.ts";
  "sqlite-services" -> "focused-memory.service.ts";
  "sqlite-services" -> "memory-extra.service.ts";
  "sqlite-services" -> "memory-focus-rule.service.ts";
  "sqlite-services" -> "memory.service.ts";
  "sqlite-services" -> "owned-memory.service.ts";
  "sqlite-services" -> "relationship-graph.service.ts";
  "sqlite-services" -> "tag-extra.service.ts";
  "sqlite-services" -> "tag.service.ts";
  "sqlite-services" -> "task.service.ts";
  "sqlite-services" -> "unique-id.service.ts";
  "tests" -> "integration";
  "integration" -> "gpt-api-chat-completion.integration.test.ts";
  "integration" -> "gpt-assistant.integration.test.ts";
  "integration" -> "gpt-threads.integration.test.ts";
  "tests" -> "unit";
  "unit" -> "gpt-tests";
  "gpt-tests" -> "gpt-api-thread.example.ts";
  "gpt-tests" -> "gpt-assistant-with-functions.example.ts";
  "gpt-tests" -> "gpt-assistant.test.ts";
  "gpt-tests" -> "gpt-crud.example.ts";
  "unit" -> "other-tests";
  "other-tests" -> "assistant.queries.test.ts";
  "other-tests" -> "gpt-api-model.helper.test.ts";
  "unit" -> "service-tests";
  "service-tests" -> "assistant-full.service.test.ts";
  "service-tests" -> "assistant.service.test.ts";
  "service-tests" -> "database.test.ts";
  "service-tests" -> "feedback.service.test.ts";
  "service-tests" -> "focused-memory.service.test.ts";
  "service-tests" -> "memory-extra.service.test.ts";
  "service-tests" -> "memory-focus-rule.service.test.ts";
  "service-tests" -> "memory.service.test.ts";
  "service-tests" -> "owned-memory.service.test.ts";
  "service-tests" -> "relationship-graph.service.test.ts";
  "service-tests" -> "tag-extra.service.test.ts";
  "service-tests" -> "tag.service.test.ts";
  "service-tests" -> "task.service.test.ts";
  "unit" -> "test-db-insert.helper.ts";
  "unit" -> "test-db-return.helper.ts";
  "unit" -> "test-db.helper.ts";
  "unit" -> "test-object.helper.ts";
  "unit" -> "transformer-tests";
  "transformer-tests" -> "assistant-full.transformer.test.ts";
  "transformer-tests" -> "assistant.transformer.test.ts";
  "transformer-tests" -> "memory-focus-rule.transformer.test.ts";
  "transformer-tests" -> "memory.transformer.test.ts";
  "transformers" -> "assistant-full.transformer.ts";
  "transformers" -> "assistant.transformer.ts";
  "transformers" -> "memory-focus-rule.transformer.ts";
  "transformers" -> "memory.transformer.ts";
  "transformers" -> "tag.transformer.ts"
}
